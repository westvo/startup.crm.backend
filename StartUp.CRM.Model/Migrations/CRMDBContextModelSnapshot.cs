// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StartUp.CRM.Model;

namespace StartUp.CRM.Model.Migrations
{
    [DbContext(typeof(CRMDBContext))]
    partial class CRMDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Accounts.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountTypeId");

                    b.Property<string>("AddressCity");

                    b.Property<string>("AddressCountry");

                    b.Property<string>("AddressPostalCode");

                    b.Property<string>("AddressState");

                    b.Property<string>("AddressStreet");

                    b.Property<Guid?>("AvatarMediaItemId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<string>("Emails");

                    b.Property<int>("Flags");

                    b.Property<Guid>("IndustryId");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OpportunityId");

                    b.Property<Guid?>("OwnerId");

                    b.Property<string>("Phones");

                    b.Property<int>("Rating");

                    b.Property<Guid?>("SalesUnitId");

                    b.Property<string>("SocialLinks");

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("OpportunityId");

                    b.HasIndex("SalesUnitId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Accounts.AccountAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<string>("AfterValueString");

                    b.Property<string>("BeforeValueString");

                    b.Property<Guid>("CreatedBy");

                    b.Property<string>("DataType");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("FieldName");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountAudit");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Accounts.AccountType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.ToTable("AccountType");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Accounts.AddressBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<Guid>("ContactId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Department");

                    b.Property<string>("Description");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("OwnerId");

                    b.Property<Guid?>("ParentContactId");

                    b.Property<string>("Position");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ContactId");

                    b.ToTable("AddressBook");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Accounts.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressCity");

                    b.Property<string>("AddressCountry");

                    b.Property<string>("AddressPostalCode");

                    b.Property<string>("AddressState");

                    b.Property<string>("AddressStreet");

                    b.Property<Guid?>("AvatarMediaItemId");

                    b.Property<DateTime?>("Birthday");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<string>("Emails");

                    b.Property<string>("FirstName");

                    b.Property<int>("Flags");

                    b.Property<int?>("Gender");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OpportunityId");

                    b.Property<Guid?>("OwnerId");

                    b.Property<string>("Phones");

                    b.Property<Guid?>("SalesUnitId");

                    b.Property<string>("SocialLinks");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("OpportunityId");

                    b.HasIndex("SalesUnitId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Accounts.ContactAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AfterValueString");

                    b.Property<string>("BeforeValueString");

                    b.Property<Guid>("ContactId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<string>("DataType");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("FieldName");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("ContactAudit");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Accounts.Industry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.ToTable("Industry");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Activities.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AssigneeId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("EndDate");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<decimal?>("Latitude");

                    b.Property<Guid?>("LinkedItemId");

                    b.Property<int?>("LinkedItemType");

                    b.Property<string>("Location");

                    b.Property<decimal?>("Longitude");

                    b.Property<Guid?>("OwnerId");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int?>("Status");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Activities.Call", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AssigneeId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("DueDate");

                    b.Property<int?>("DurationHours");

                    b.Property<int?>("DurationMinutes");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("LinkedItemId");

                    b.Property<int?>("LinkedItemType");

                    b.Property<double>("Ordinal");

                    b.Property<Guid?>("OwnerId");

                    b.Property<int?>("Priority");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int?>("Status");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.ToTable("Call");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Activities.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AssigneeId");

                    b.Property<int>("Color");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("LinkedItemId");

                    b.Property<int?>("LinkedItemType");

                    b.Property<Guid?>("OwnerId");

                    b.Property<int>("PositionLeft");

                    b.Property<int>("PositionTop");

                    b.Property<int?>("Status");

                    b.Property<string>("Subject");

                    b.Property<int>("ZIndex");

                    b.HasKey("Id");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Activities.Reminder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AssigneeId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("EndDateOffset");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("LinkedItemId");

                    b.Property<int?>("LinkedItemType");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.Property<Guid?>("ParentId");

                    b.Property<int?>("Status");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.ToTable("Reminder");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Activities.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AssigneeId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("DueDate");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("LinkedItemId");

                    b.Property<int?>("LinkedItemType");

                    b.Property<double>("Ordinal");

                    b.Property<Guid?>("OwnerId");

                    b.Property<int?>("Priority");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int?>("Status");

                    b.Property<string>("Subject");

                    b.Property<Guid>("TaskTypeId");

                    b.HasKey("Id");

                    b.HasIndex("TaskTypeId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Activities.TaskType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.ToTable("TaskType");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Campaigns.Campaign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.ToTable("Campaign");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Campaigns.CampaignAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AfterValueString");

                    b.Property<string>("BeforeValueString");

                    b.Property<Guid>("CampaignId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<string>("DataType");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("FieldName");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("CampaignAudit");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Campaigns.CampaignLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CampaignId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("CampaignLog");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Campaigns.CampaignTracker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CampaignId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("CampaignTracker");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Currencies.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<Guid>("CreatedBy");

                    b.Property<string>("CurrencySymbol");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("DecimalSymbol");

                    b.Property<int>("DigitsAfterDecimal");

                    b.Property<decimal>("ExchangeRate");

                    b.Property<int>("Flags");

                    b.Property<string>("Format");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("ListSymbol");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Currencies.ExchangeRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("OwnerId");

                    b.Property<DateTime>("ValidFrom");

                    b.Property<DateTime>("ValidTo");

                    b.HasKey("Id");

                    b.ToTable("ExchangeRate");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Currencies.ExchangeRateList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<Guid>("CurrencyId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<Guid>("ExchangeRateId");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("OwnerId");

                    b.Property<decimal>("Rate");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ExchangeRateId");

                    b.ToTable("ExchangeRateList");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Leads.Lead", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressCity");

                    b.Property<string>("AddressCountry");

                    b.Property<string>("AddressPostalCode");

                    b.Property<string>("AddressState");

                    b.Property<string>("AddressStreet");

                    b.Property<Guid?>("CampaignId");

                    b.Property<string>("CompanyName");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<string>("Emails");

                    b.Property<string>("FirstName");

                    b.Property<int>("Flags");

                    b.Property<int?>("Gender");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("LastName");

                    b.Property<Guid?>("LeadSourceId");

                    b.Property<string>("MiddleName");

                    b.Property<Guid?>("OwnerId");

                    b.Property<string>("Phones");

                    b.Property<string>("Position");

                    b.Property<int?>("Ranking");

                    b.Property<Guid?>("SalesUnitId");

                    b.Property<string>("SocialLinks");

                    b.Property<int>("Status");

                    b.Property<string>("Title");

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("LeadSourceId");

                    b.HasIndex("SalesUnitId");

                    b.ToTable("Lead");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Leads.LeadAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AfterValueString");

                    b.Property<string>("BeforeValueString");

                    b.Property<Guid>("CreatedBy");

                    b.Property<string>("DataType");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("FieldName");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("LeadId");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("LeadId");

                    b.ToTable("LeadAudit");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Leads.LeadSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.ToTable("LeadSource");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Opportunities.LostReason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("OwnerId");

                    b.Property<string>("Reason");

                    b.HasKey("Id");

                    b.ToTable("LostReason");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Opportunities.Opportunity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("Amount");

                    b.Property<Guid?>("CampaignId");

                    b.Property<DateTime>("CloseDate");

                    b.Property<Guid>("CreatedBy");

                    b.Property<Guid?>("CurrencyId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<decimal?>("FixedExchangeRate");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<DateTime>("LastMovedDate");

                    b.Property<Guid?>("LeadSourceId");

                    b.Property<Guid?>("LostReasonId");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OpportunityTypeId");

                    b.Property<double>("Ordinal");

                    b.Property<Guid?>("OwnerId");

                    b.Property<Guid?>("PipelineId");

                    b.Property<int?>("Ranking");

                    b.Property<Guid?>("SalesUnitId");

                    b.Property<Guid?>("StageId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("LeadSourceId");

                    b.HasIndex("LostReasonId");

                    b.HasIndex("OpportunityTypeId");

                    b.HasIndex("PipelineId");

                    b.HasIndex("SalesUnitId");

                    b.HasIndex("StageId");

                    b.ToTable("Opportunity");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Opportunities.OpportunityAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AfterValueString");

                    b.Property<string>("BeforeValueString");

                    b.Property<Guid>("CreatedBy");

                    b.Property<string>("DataType");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("FieldName");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid>("OpportunityId");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("OpportunityId");

                    b.ToTable("OpportunityAudit");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Opportunities.OpportunityProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<decimal>("Discount");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid>("OpportunityId");

                    b.Property<Guid?>("OwnerId");

                    b.Property<decimal>("Price");

                    b.Property<Guid>("ProductId");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("OpportunityId");

                    b.HasIndex("ProductId");

                    b.ToTable("OpportunityProduct");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Opportunities.OpportunityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.ToTable("OpportunityType");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Opportunities.Target", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("FromDate");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("OwnerId");

                    b.Property<DateTime>("ToDate");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.ToTable("Target");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.Property<string>("Sku");

                    b.Property<Guid>("TaxonId");

                    b.Property<string>("UnitSymbol");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Products.ProductPriceList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("ProductPriceList");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Products.ProductPriceListDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<decimal?>("Discount");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<Guid?>("OwnerId");

                    b.Property<decimal>("Price");

                    b.Property<Guid>("ProductId");

                    b.Property<Guid>("ProductPriceListId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductPriceListId");

                    b.ToTable("ProductPriceListDetail");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.SalesUnits.Pipeline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Color");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.Property<Guid?>("SalesUnitId");

                    b.Property<string>("UrlName");

                    b.HasKey("Id");

                    b.HasIndex("SalesUnitId");

                    b.ToTable("Pipeline");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.SalesUnits.SalesUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.Property<Guid?>("ParentId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("SalesUnit");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.SalesUnits.Stage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.Property<double>("Percentage");

                    b.Property<Guid>("PipelineId");

                    b.Property<double>("TimeFrame");

                    b.HasKey("Id");

                    b.HasIndex("PipelineId");

                    b.ToTable("Stage");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.SalesUnits.StageCheckedList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<int>("ItemType");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<int>("Ordinal");

                    b.Property<Guid?>("OwnerId");

                    b.Property<Guid>("StageCustomFieldId");

                    b.Property<Guid>("StageId");

                    b.HasKey("Id");

                    b.HasIndex("StageCustomFieldId");

                    b.HasIndex("StageId");

                    b.ToTable("StageCheckedList");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.SalesUnits.StageCustomField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModified");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.ToTable("StageCustomField");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Accounts.Account", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Accounts.AccountType", "AccountType")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StartUp.CRM.Model.Entities.Accounts.Industry", "Industry")
                        .WithMany("Accounts")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StartUp.CRM.Model.Entities.Opportunities.Opportunity")
                        .WithMany("Accounts")
                        .HasForeignKey("OpportunityId");

                    b.HasOne("StartUp.CRM.Model.Entities.SalesUnits.SalesUnit")
                        .WithMany("Accounts")
                        .HasForeignKey("SalesUnitId");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Accounts.AccountAudit", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Accounts.Account", "Account")
                        .WithMany("AccountAudits")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Accounts.AddressBook", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Accounts.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StartUp.CRM.Model.Entities.Accounts.Contact", "Contact")
                        .WithMany("AddressBooks")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Accounts.Contact", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Opportunities.Opportunity")
                        .WithMany("Contacts")
                        .HasForeignKey("OpportunityId");

                    b.HasOne("StartUp.CRM.Model.Entities.SalesUnits.SalesUnit")
                        .WithMany("Contacts")
                        .HasForeignKey("SalesUnitId");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Accounts.ContactAudit", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Accounts.Contact", "Contact")
                        .WithMany("ContactAudits")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Activities.Task", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Activities.TaskType", "TaskType")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Campaigns.CampaignAudit", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Campaigns.Campaign", "Campaign")
                        .WithMany("CampaignAudits")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Campaigns.CampaignLog", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Campaigns.Campaign", "Campaign")
                        .WithMany("CampaignLogs")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Campaigns.CampaignTracker", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Campaigns.Campaign", "Campaign")
                        .WithMany("CampaignTrackers")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Currencies.ExchangeRateList", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Currencies.Currency", "Currency")
                        .WithMany("ExchangeRateList")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StartUp.CRM.Model.Entities.Currencies.ExchangeRate", "ExchangeRate")
                        .WithMany("ExchangeRateList")
                        .HasForeignKey("ExchangeRateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Leads.Lead", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Campaigns.Campaign", "Campaign")
                        .WithMany("Leads")
                        .HasForeignKey("CampaignId");

                    b.HasOne("StartUp.CRM.Model.Entities.Leads.LeadSource", "LeadSource")
                        .WithMany("Lead")
                        .HasForeignKey("LeadSourceId");

                    b.HasOne("StartUp.CRM.Model.Entities.SalesUnits.SalesUnit")
                        .WithMany("Leads")
                        .HasForeignKey("SalesUnitId");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Leads.LeadAudit", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Leads.Lead", "Lead")
                        .WithMany("LeadAudits")
                        .HasForeignKey("LeadId");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Opportunities.Opportunity", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Campaigns.Campaign", "Campaign")
                        .WithMany("Opportunities")
                        .HasForeignKey("CampaignId");

                    b.HasOne("StartUp.CRM.Model.Entities.Currencies.Currency", "Currency")
                        .WithMany("Opportunity")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("StartUp.CRM.Model.Entities.Leads.LeadSource", "LeadSource")
                        .WithMany("Opportunity")
                        .HasForeignKey("LeadSourceId");

                    b.HasOne("StartUp.CRM.Model.Entities.Opportunities.LostReason", "LostReason")
                        .WithMany("Opportunity")
                        .HasForeignKey("LostReasonId");

                    b.HasOne("StartUp.CRM.Model.Entities.Opportunities.OpportunityType", "OpportunityType")
                        .WithMany("Opportunities")
                        .HasForeignKey("OpportunityTypeId");

                    b.HasOne("StartUp.CRM.Model.Entities.SalesUnits.Pipeline", "Pipeline")
                        .WithMany("Opportunities")
                        .HasForeignKey("PipelineId");

                    b.HasOne("StartUp.CRM.Model.Entities.SalesUnits.SalesUnit")
                        .WithMany("Opportunities")
                        .HasForeignKey("SalesUnitId");

                    b.HasOne("StartUp.CRM.Model.Entities.SalesUnits.Stage", "Stage")
                        .WithMany("Opportunities")
                        .HasForeignKey("StageId");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Opportunities.OpportunityAudit", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Opportunities.Opportunity", "Opportunity")
                        .WithMany("OpportunityAudits")
                        .HasForeignKey("OpportunityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Opportunities.OpportunityProduct", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Opportunities.Opportunity", "Opportunity")
                        .WithMany("OpportunityProducts")
                        .HasForeignKey("OpportunityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StartUp.CRM.Model.Entities.Products.Product", "Product")
                        .WithMany("OpportunityProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.Products.ProductPriceListDetail", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.Products.Product", "Product")
                        .WithMany("ProductPriceListDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StartUp.CRM.Model.Entities.Products.ProductPriceList", "ProductPriceList")
                        .WithMany("ProductPriceListDetails")
                        .HasForeignKey("ProductPriceListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.SalesUnits.Pipeline", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.SalesUnits.SalesUnit")
                        .WithMany("Pipelines")
                        .HasForeignKey("SalesUnitId");
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.SalesUnits.Stage", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.SalesUnits.Pipeline", "Pipeline")
                        .WithMany("Stages")
                        .HasForeignKey("PipelineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StartUp.CRM.Model.Entities.SalesUnits.StageCheckedList", b =>
                {
                    b.HasOne("StartUp.CRM.Model.Entities.SalesUnits.StageCustomField", "StageCustomField")
                        .WithMany("StageCheckedLists")
                        .HasForeignKey("StageCustomFieldId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StartUp.CRM.Model.Entities.SalesUnits.Stage", "Stage")
                        .WithMany("StageCheckedLists")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
